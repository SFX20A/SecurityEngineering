pool:
  vmImage: ubuntu-latest

jobs:
- job: sast #Static Analysis
  steps:
    - script: |
        docker run --user $(id -u):$(id -g) -v $(pwd):/src --rm sfx20a/bandit -r /src -f json -o /src/bandit-output.json   
      continueOnError: true # proceed even if failed job
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: $(Build.Repository.LocalPath)/bandit-output.json # defined variable https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml
        ArtifactName: banditoutput # output name
#  dependsOn: prerequisite   # depends on a prerequisite job to complete, for sequential jobs
  condition: succeededOrFailed() # proceed even if failed job
      
- job: sca #Software Composition Analysis
  steps:
  - script: |
      docker run --rm -v $(pwd):/src sfx20a/safety check -r requirements.txt --json -o /src/safety-sca.json
    continueOnError: true #proceed even if failed job
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish:  $(Build.Repository.LocalPath)/safety-sca.json
      ArtifactName: safetysca
  condition: succeededOrFailed() # proceed even if failed job  

- job: secrets #secrets detection
  steps:
  - script: |
       docker run --rm -v $(pwd):/src sfx20a/trufflehog https://$(gitpass)@dev.azure.com/gccscyberspace01/CICDPipelineTest/_git/CICDPipelineTest --json > trufflehog-output.json
    continueOnError: true #proceed even if failed job
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish:  $(Build.Repository.LocalPath)/trufflehog-output.json
      ArtifactName: trufflehog
  condition: succeededOrFailed() # proceed even if failed job  
